# https://docs.github.com/en/actions/deployment/deploying-to-your-cloud-provider/deploying-to-azure/deploying-to-azure-static-web-app 
# For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig

name: Kaylumah.nl CI/CD

on:
    workflow_dispatch:
    push:
      branches:
        - main
    pull_request:
      types: [opened, synchronize, reopened, closed, ready_for_review, converted_to_draft]
      branches:
        - main

permissions:
  issues: write
  contents: read
  pull-requests: write

jobs:

  fail_if_pull_request_is_draft:
    if: github.event.pull_request.draft == true && (github.event_name == 'pull_request' && github.event.action != 'closed') 
    runs-on: ubuntu-latest
    steps:
    - name: Fails in order to indicate that pull request needs to be marked as ready to review and unit tests workflow needs to pass.
      run: exit 1

  build_and_deploy:
    if: github.event.pull_request.draft == false && (github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed'))
    runs-on: ubuntu-latest
    name: Build and Deploy
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Set TimeZone
        uses: hoang-rio/set-timezone@v1.4
        with:
          timezoneLinux: "Europe/Amsterdam"
      - name: Sets env vars for PR
        if: github.event_name == 'pull_request'
        run: |
          echo "PR_BUILD_ID=${{ github.event.number }}" >> $GITHUB_ENV
      - name: Use Node.js v20
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json
      - name: 'Make tools available'
        shell: pwsh
        run: |
          dotnet tool restore
      - name: 'Generate Website'
        shell: pwsh
        run: |
          ./build.ps1 -BuildId $env:GITHUB_RUN_ID -BuildNumber $env:GITHUB_RUN_NUMBER -CleanDevDependencies

      # Deploy the app to Azure Static Web Apps using the artifacts built previously
      - name: Build And Deploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GREEN_FIELD_0353FEE03 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          app_location: "dist"
          # api_location: ""
          output_location: ""
          skip_app_build: true
          skip_api_build: true

      - name: Run E2e
        shell: pwsh
        run: |
            $EnvironmentUrl = ./tools/Get-BaseUrl.ps1
            $Env:PLAYWRIGHT_TEST_BASE_URL = $EnvironmentUrl
            Write-Host "Will run E2e against $Env:PLAYWRIGHT_TEST_BASE_URL"
            pwsh ./test/E2e/bin/Release/net8.0/playwright.ps1 install chromium --with-deps
            dotnet test test/E2e

  close_pull_request:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request
    steps:
      - name: Close Pull Request
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GREEN_FIELD_0353FEE03 }}
          action: "close"