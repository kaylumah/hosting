name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true
      - name: Use Node.js v16
        uses: actions/setup-node@v1
        with:
          node-version: 16
      - name: Setup dotnet
        uses: actions/setup-dotnet@v2
      - name: Sets env vars for PR
        if: github.event_name == 'pull_request'
        run: |
          echo "PR_BUILD_ID=${{ github.event.number }}" >> $GITHUB_ENV
          echo "PR_BASE_URL=https://green-field-0353fee03-${{ github.event.number }}.westeurope.1.azurestaticapps.net" >> $GITHUB_ENV
      - name: 'Generate Website'
        shell: pwsh
        run: |
          ./build.ps1 -BuildId $env:GITHUB_RUN_ID -BuildNumber $env:GITHUB_RUN_NUMBER -CleanDevDependencies
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GREEN_FIELD_0353FEE03 }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "dist" # App source code path
          api_location: "" # Api source code path - optional
          output_location: "" # Built app content directory - optional
          ###### End of Repository/Build Configurations ######
      # - name: Print Deployment URL
      #   run: echo ${{ steps.builddeploy.outputs.static_web_app_url }}
      - name: 'Download SiteMap'
        id: "downloadsitemap"
        shell: pwsh
        run: |
          [array] $Urls = ./tools/Download-Sitemap.ps1 -Url "${{ steps.builddeploy.outputs.static_web_app_url }}/sitemap.xml"
          # $Urls = $Urls | Foreach-Object { "--url=$_" }
          # [string] $Output = $Urls -Join " "
          [string] $Output = $Urls | Out-String
          echo ::set-output name=SiteMapUrls::$($Output)
      - name: Audit URLs using Lighthouse
        uses: treosh/lighthouse-ci-action@v9
        with:
          urls: ${{ steps.downloadsitemap.outputs.SiteMapUrls }}
      # - run: npm install -g @lhci/cli@0.8.x
      # - run: lhci collect --config=./dist/lighthouserc.json
      # - run: lhci autorun ${{ steps.downloadsitemap.outputs.SiteMapUrls }}
         # [string] $Output = $Urls -join ","
         # echo ::set-output name=SiteMapUrls::'$($Output)'
      # - name: Lighthouse
      #   if: github.event_name == 'pull_request'
      #   uses: foo-software/lighthouse-check-action@master
      #   with:
      #     urlsJson: '${{ steps.downloadsitemap.outputs.SiteMapUrls }}'
      #     #urls: ${{ steps.downloadsitemap.outputs.SiteMapUrls }}
      #     # urls: '${{ env.PR_BASE_URL }}'

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_GREEN_FIELD_0353FEE03 }}
          action: "close"
